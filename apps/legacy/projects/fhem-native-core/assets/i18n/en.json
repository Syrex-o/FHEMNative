{
	"COMPONENTS":{
		"Box":{
			"NAME": "Box",
			"DES": "A simple Box, to structure components in rooms.",
			"INPUTS":{
				"data_headline": {
					"name": "Headline",
					"info": "Header label"
				},
				"data_borderRadius":{
					"name": "Border radius",
					"info": "Border radius of the box"
				},
				"data_borderRadiusTopLeft":{
					"name": "Border radius top left",
					"info": "Border radius of the box top left"
				},
				"data_borderRadiusTopRight":{
					"name": "Border radius top right",
					"info": "Border radius of the box top right"
				},
				"data_borderRadiusBottomLeft":{
					"name": "Border radius bottom left",
					"info": "Border radius of the box bottom left"
				},
				"data_borderRadiusBottomRight":{
					"name": "Border radius bottom right",
					"info": "Border radius of the box bottom right"
				},
				"data_notchDefinition": {
					"name": "Notch definition",
					"info": "Details available here: https://css-tricks.com/notched-boxes/"
				},
				"arr_data_style":{
					"name": "Style",
					"info": "Style of the box"
				},
				"arr_data_headerStyle": {
					"name": "Header text style",
					"info": "Style of the header text"
				},
				"arr_data_headerPosition": {
					"name": "Header text position",
					"info": "Position of the header text"
				},
				"style_headerColor":{
					"name": "Header color",
					"info": "Header background color"
				},
				"style_backgroundColor":{
					"name": "Background color",
					"info": "Content background color"
				},
				"bool_data_showHeader":{
					"name": "Show header",
					"info": "Show/hide box header"
				},
				"bool_data_showShadow":{
					"name": "Show shadow",
					"info": "Show/hide box shadow"
				},
				"bool_data_customBorder":{
					"name": "Custom border radius",
					"info": "Custom border radius for each corner"
				},
				"bool_data_customNotch":{
					"name": "Custom notch",
					"info": "Custom notch for each corner"
				}
			}
		},
		"Button":{
			"NAME": "Button",
			"DES": "A simple Button to toggle 2 different states in FHEM, or directly send a command to FHEM.",
			"INPUTS":{
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device"
				},
				"data_reading":{
					"name": "Reading name",
					"info": "Name of the Fhem Device Reading"
				},
				"data_setReading":{
					"name": "Set Reading",
					"info": "Name of the set command (if needed)"
				},
				"data_getOn":{
					"name": "Get on",
					"info": "State of the reading in ON state"
				},
				"data_getOff":{
					"name": "Get off",
					"info": "State of the reading in OFF state"
				},
				"data_setOn":{
					"name": "Set on",
					"info": "ON value that should be sended"
				},
				"data_setOff":{
					"name": "Set off",
					"info": "OFF value that should be sended"
				},
				"data_label":{
					"name": "Label",
					"info": "Label to display in the button (default: Fhem device name)"
				},
				"data_sendCommand":{
					"name": "Send command",
					"info": "A single command that should be send to Fhem"
				},
				"data_borderRadius":{
					"name": "Border radius",
					"info": "Border Radius of the button"
				},
				"data_borderRadiusTopLeft":{
					"name": "Border radius top left",
					"info": "Border radius of the button top left"
				},
				"data_borderRadiusTopRight":{
					"name": "Border radius top right",
					"info": "Border radius of the button top right"
				},
				"data_borderRadiusBottomLeft":{
					"name": "Border radius bottom left",
					"info": "Border radius of the button bottom left"
				},
				"data_borderRadiusBottomRight":{
					"name": "Border radius bottom right",
					"info": "Border radius of the button bottom right"
				},
				"data_iconSize":{
					"name": "Icon size",
					"info": "Size of the icon in the button"
				},
				"arr_data_style":{
					"name": "Style",
					"info": "Style of the button"
				},
				"icon_iconOn":{
					"name": "Icon on",
					"info": "Desired Icon for ON state"
				},
				"icon_iconOff":{
					"name": "Icon off",
					"info": "Desired Icon for OFF state"
				},
				"bool_data_iconOnly":{
					"name": "Show icon only",
					"info": "Enable/disable to display icon only"
				},
				"bool_data_customBorder":{
					"name": "Custom border radius",
					"info": "Custom border radius for each corner"
				},
				"style_iconColorOn":{
					"name": "Icon color on",
					"info": "Icon color for ON state"
				},
				"style_iconColorOff":{
					"name": "Icon color off",
					"info": "Icon color for OFF state"
				},
				"style_buttonColor":{
					"name": "Background color",
					"info": "Button background color"
				},
				"style_labelColor":{
					"name": "Label color",
					"info": "Color of the label"
				}
			}
		},
		"Button Menu":{
			"NAME": "Button Menu",
			"DES": "A simple Button to switch rooms.",
			"INPUTS":{
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device"
				},
				"data_reading":{
					"name": "Reading name",
					"info": "Name of the Fhem Device Reading"
				},
				"data_room": {
					"name": "Room",
					"info": "Room to switch to (Roomname)"
				},
				"data_getOn":{
					"name": "Get on",
					"info": "State of the reading in ON state"
				},
				"data_getOff":{
					"name": "Get off",
					"info": "State of the reading in OFF state"
				},
				"data_label":{
					"name": "Label",
					"info": "Label to display in the button (default: Fhem device name)"
				},
				"data_borderRadius":{
					"name": "Border radius",
					"info": "Border Radius of the button"
				},
				"data_borderRadiusTopLeft":{
					"name": "Border radius top left",
					"info": "Border radius of the button top left"
				},
				"data_borderRadiusTopRight":{
					"name": "Border radius top right",
					"info": "Border radius of the button top right"
				},
				"data_borderRadiusBottomLeft":{
					"name": "Border radius bottom left",
					"info": "Border radius of the button bottom left"
				},
				"data_borderRadiusBottomRight":{
					"name": "Border radius bottom right",
					"info": "Border radius of the button bottom right"
				},
				"data_iconSize":{
					"name": "Icon size",
					"info": "Size of the icon in the button"
				},
				"arr_data_style":{
					"name": "Style",
					"info": "Style of the button"
				},
				"icon_iconOn":{
					"name": "Icon on",
					"info": "Desired Icon for ON state"
				},
				"icon_iconOff":{
					"name": "Icon off",
					"info": "Desired Icon for OFF state"
				},
				"bool_data_iconOnly":{
					"name": "Show icon only",
					"info": "Enable/disable to display icon only"
				},
				"bool_data_customBorder":{
					"name": "Custom border radius",
					"info": "Custom border radius for each corner"
				},
				"style_iconColorOn":{
					"name": "Icon color on",
					"info": "Icon color for ON state"
				},
				"style_iconColorOff":{
					"name": "Icon color off",
					"info": "Icon color for OFF state"
				},
				"style_buttonColor":{
					"name": "Background color",
					"info": "Button background color"
				},
				"style_labelColor":{
					"name": "Label color",
					"info": "Color of the label"
				}
			},
			"TRANSLATOR":{
				"ROOM_NOT_FOUND": {
					"HEADER": "Info",
					"MESSAGE": "Room not found"
				}
			}
		},
		"Button Multistate":{
			"NAME": "Button Multistate",
			"DES": "A Button to switch between different states in FHEM.",
			"INPUTS":{
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device"
				},
				"data_reading":{
					"name": "Reading name",
					"info": "Name of the Fhem Device Reading"
				},
				"data_setReading":{
					"name": "Set Reading",
					"info": "Name of the set command (if needed)"
				},
				"data_currentState":{
					"name": "Current state",
					"info": "Reading for the current state"
				},
				"data_getOn":{
					"name": "Get on",
					"info": "List of get values to rotate"
				},
				"data_setOn":{
					"name": "Set on",
					"info": "List of set values to rotate"
				},
				"data_label":{
					"name": "Label",
					"info": "Label to display in the button (default: Fhem device name)"
				},
				"data_borderRadius":{
					"name": "Border radius",
					"info": "Border Radius of the button"
				},
				"data_borderRadiusTopLeft":{
					"name": "Border radius top left",
					"info": "Border radius of the button top left"
				},
				"data_borderRadiusTopRight":{
					"name": "Border radius top right",
					"info": "Border radius of the button top right"
				},
				"data_borderRadiusBottomLeft":{
					"name": "Border radius bottom left",
					"info": "Border radius of the button bottom left"
				},
				"data_borderRadiusBottomRight":{
					"name": "Border radius bottom right",
					"info": "Border radius of the button bottom right"
				},
				"data_iconSize":{
					"name": "Icon size",
					"info": "Size of the icon in the button"
				},
				"arr_data_style":{
					"name": "Style",
					"info": "Style of the button"
				},
				"bool_data_iconOnly":{
					"name": "Show icon only",
					"info": "Enable/disable to display icon only"
				},
				"bool_data_customBorder":{
					"name": "Custom border radius",
					"info": "Custom border radius for each corner"
				},
				"arr_icon_icons":{
					"name": "Icons",
					"info": "List of icons to rotate"
				},
				"arr_style_labelColors":{
					"name": "Label colors",
					"info": "Colors of the label to rotate"
				},
				"arr_style_buttonColors":{
					"name": "Background colors",
					"info": "Button background colors to rotate"
				},
				"arr_style_iconColors":{
					"name": "Icon colors",
					"info": "Icon color to rotate"
				}
			}
		},
		"Chart":{
			"NAME": "Chart",
			"DES": "A Chart, to create diagrams out of FHEM log files.",
			"INPUTS":{
				"data_device": {
					"name": "Log device name",
					"info": "Name of the Fhem device"
				},
				"data_dbDevice":{
					"name": "Log device and reading from DbLog",
					"info": "Log device and reading, that should be selected from DbLog (Exp. device:reading)"
				},
				"data_logFile":{
					"name": "Log file name",
					"info": "Name of a specific log file to choose (if needed)"
				},
				"arr_data_dbtype":{
					"name": "FHEM-module type",
					"info": "Fhem module, that should be used"
				},
				"arr_data_style":{
					"name": "Style",
					"info": "Style of the chart"
				},
				"bool_data_getCurrent":{
					"name": "Get current log",
					"info": "Read the current log file from the device (otherwise a log file has to be defined)"
				},
				"bool_data_zoomBothAxis":{
					"name": "Zoom both axis",
					"info": "Enable/disable zooming in both axis of the chart"
				}
			},
			"TRANSLATOR":{
				"ADD":{
					"HEADER": "Add graph",
					"INFO": "Add new Graph and configure",
					"SELECT_CHART": "Select chart type",
					"SELECT_READING": "Select reading from FHEM",
					"SELECT_COLOR": "Select color for graph",
					"SELECT_AXIS": "Select axis for graph",
					"SELECT_LABEL": "Show/hide label",
					"SELECT_LABEL_DES": "Show/hide labels on points on graph",
					"SELECT_ENDING": "Select label ending",
					"SELECT_AGG": "Select aggregation"
				},
				"AXIS":{
					"HEADER": "Configure axis",
					"X":{
						"HEADER": "X-axis",
						"TIME_FORMAT": "Time format of X Axis"
					},
					"Y":{
						"HEADER": "Y-axis",
						"LEFT_MAX": "Left axis max. Y",
						"LEFT_MIN": "Left axis min. Y",
						"RIGHT_MAX": "Right axis max. Y",
						"RIGHT_MIN": "Right axis min. Y",
						"LEFT_EXTENSION": "Left axis label ending",
						"RIGHT_EXTENSION": "Right axis label ending"
					}
				},
				"REMOVE": "delete graph",
				"SELECT_DATA": "Select data:",
				"NO_DATA": "No data was found."
			}
		},
		"Circle Menu":{
			"NAME": "Circle Menu",
			"DES": "A menu, that can hold up to six values and expands in a desired direction.",
			"INPUTS":{
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device"
				},
				"data_reading":{
					"name": "Reading name",
					"info": "Name of the Fhem Device Reading"
				},
				"data_setReading":{
					"name": "Set Reading",
					"info": "Name of the set command (if needed)"
				},
				"data_value1":{
					"name": "Value 1",
					"info": "1. value of the multi menu"
				},
				"data_value2":{
					"name": "Value 2",
					"info": "2. value of the multi menu (optional)"
				},
				"data_value3":{
					"name": "Value 3",
					"info": "3. value of the multi menu (optional)"
				},
				"data_value4":{
					"name": "Value 4",
					"info": "4. value of the multi menu (optional)"
				},
				"data_value5":{
					"name": "Value 5",
					"info": "5. value of the multi menu (optional)"
				},
				"data_value6":{
					"name": "Value 6",
					"info": "6. value of the multi menu (optional)"
				},
				"data_borderRadius":{
					"name": "Border radius",
					"info": "Border Radius of the button"
				},
				"data_borderRadiusTopLeft":{
					"name": "Border radius top left",
					"info": "Border radius of the button top left"
				},
				"data_borderRadiusTopRight":{
					"name": "Border radius top right",
					"info": "Border radius of the button top right"
				},
				"data_borderRadiusBottomLeft":{
					"name": "Border radius bottom left",
					"info": "Border radius of the button bottom left"
				},
				"data_borderRadiusBottomRight":{
					"name": "Border radius bottom right",
					"info": "Border radius of the button bottom right"
				},
				"bool_data_customBorder":{
					"name": "Custom border radius",
					"info": "Custom border radius for each corner"
				},
				"bool_data_useIcons":{
					"name": "Icons instead of values",
					"info": "Use Icons instead of values in multi menu"
				},
				"arr_data_expandStyle":{
					"name": "Expand style",
					"info": "Direction where the menu should unfold"
				},
				"arr_data_style":{
					"name": "Style",
					"info": "Style of the button"
				},
				"icon_icon":{
					"name": "Icon",
					"info": "Desired icon of the menu"
				},
				"style_iconColorOn":{
					"name": "Icon color on",
					"info": "Icon color for ON state"
				},
				"style_iconColorOff":{
					"name": "Icon color off",
					"info": "Icon color for OFF state"
				},
				"style_buttonColor":{
					"name": "Background color",
					"info": "Button background color"
				},
				"style_labelColor":{
					"name": "Label color",
					"info": "Color of the labels in the button"
				},
				"style_activeColor":{
					"name": "Active color",
					"info": "Color of the active item"
				},
				"arr_icon_icons":{
					"name": "Icons",
					"info": "List of icons for multi menu"
				},
				"arr_style_iconColors":{
					"name": "Icon colors",
					"info": "List of icon colors for the multi menu"
				}
			}
		},
		"Circle Slider":{
			"NAME": "Circle Slider",
			"DES": "A circular slider, to send numeric values to FHEM.",
			"INPUTS":{
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device"
				},
				"data_reading":{
					"name": "Reading name",
					"info": "Name of the Fhem Device Reading"
				},
				"data_setReading":{
					"name": "Set Reading",
					"info": "Name of the set command (if needed)"
				},
				"data_threshold":{
					"name": "Threshold",
					"info": "Event reduction. Only send every n command to FHEM (in combination with updateOnMove)"
				},
				"data_textSize":{
					"name": "Text size",
					"info": "Size of the value label in the slider"
				},
				"data_label":{
					"name": "Label",
					"info": "Subline label in the slider"
				},
				"data_labelExtension":{
					"name": "Label extension",
					"info": "Ending of the value label (Exp. %)"
				},
				"data_bottomAngle":{
					"name": "Bottom angle",
					"info": "Angle of the circle opening on the bottom of the slider"
				},
				"data_arcThickness":{
					"name": "Arc thickness",
					"info": "Width of the slider arc"
				},
				"data_thumbRadius":{
					"name": "Thumb radius",
					"info": "Radius of the slider thumb"
				},
				"data_thumbBorder":{
					"name": "Thumb border",
					"info": "Width of the border of the thumb"
				},
				"data_step":{
					"name": "Steps",
					"info": "Steps for the slider to move and set values"
				},
				"data_min":{
					"name": "Min value",
					"info": "Min. value of the slider"
				},
				"data_max":{
					"name": "Max value",
					"info": "Max. value of the slider"
				},
				"data_labelTopPos": {
					"name": "Label position top (px / %)",
					"info": "Label position from top"
				},
				"data_labelLeftPos": {
					"name": "Label position left (px / %)",
					"info": "Label position from left"
				},
				"bool_data_updateOnMove":{
					"name": "Update on move",
					"info": "Activate/deactivate sending of values continiously on move"
				},
				"bool_data_customLabelPosition": {
					"name": "Custom label position (px/%)",
					"info": "Activate/deactivate custom label positioning"
				},
				"style_backgroundColor":{
					"name": "Arc background",
					"info": "Background color of the slider arc"
				},
				"style_circleBackgroundColor":{
					"name": "Background color",
					"info": "Background color of the inner circle"
				},
				"style_thumbColor":{
					"name": "Thumb color",
					"info": "Background color of the slider thumb"
				},
				"arr_style_fillColors":{
					"name": "Fill colors",
					"info": "Background color of the slider arc (multi selection will draw a gradient)"
				}
			}
		},
		"Clock":{
			"NAME": "Clock",
			"DES": "A clock, that can be either digital or analog.",
			"INPUTS": {
				"arr_data_style": {
					"name": "Clock style",
					"info": "Clock tyle"
				},
				"arr_data_format":{
					"name": "Format",
					"info": "Time format of the clock"
				},
				"bool_data_showTicks":{
					"name": "Show ticks",
					"info": "Show/hide hourly ticks"
				},
				"style_color":{
					"name": "Clock color",
					"info": "Primary color of the clock"
				},
				"style_hourColor":{
					"name": "Hour color",
					"info": "Color of the hours display"
				},
				"style_minuteColor":{
					"name": "Minute color",
					"info": "Color of the minutes display"
				},
				"style_secondColor":{
					"name": "Second color",
					"info": "Color of the seconds display"
				}
			}
		},
		"Color Picker":{
			"NAME": "Color Picker",
			"DES": "A color selection menu, to change colors and brightness in FHEM.",
			"INPUTS":{
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device"
				},
				"data_reading":{
					"name": "Reading name",
					"info": "Name of the Fhem Device Reading"
				},
				"data_setReading":{
					"name": "Set Reading",
					"info": "Name of the set command (if needed)"
				},
				"data_sliderReading":{
					"name": "Slider reading",
					"info": "Name of the slider reading in the same device (if needed)"
				},
				"data_setSliderReading":{
					"name": "Set slider reading",
					"info": "name des Set Befehls vom sliderReading (if needed)"
				},
				"data_popupWidth":{
					"name": "Popup width",
					"info": "Breite of the color picker popup"
				},
				"data_popupHeight":{
					"name": "Popup height",
					"info": "Höhe of the color picker popup"
				},
				"data_borderRadius":{
					"name": "Border radius",
					"info": "Border radius of the color preview"
				},
				"data_borderRadiusTopLeft":{
					"name": "Border radius top left",
					"info": "Border radius of the color preview top left"
				},
				"data_borderRadiusTopRight":{
					"name": "Border radius top right",
					"info": "Border radius of the color preview top right"
				},
				"data_borderRadiusBottomLeft":{
					"name": "Border radius bottom left",
					"info": "Border radius of the color preview bottom left"
				},
				"data_borderRadiusBottomRight":{
					"name": "Border radius bottom right",
					"info": "Border radius of the color preview bottom right"
				},
				"data_headline":{
					"name": "Headline",
					"info": "Headline of the popup"
				},
				"data_threshold":{
					"name": "Threshold",
					"info": "Event reduction. Only send every n command to FHEM (in combination with updateOnMove)"
				},
				"arr_data_colorInput":{
					"name": "Color input",
					"info": "Definition of the color input"
				},
				"arr_data_colorOutput":{
					"name": "Color output",
					"info": "Definition of the color output"
				},
				"arr_data_animationStyle":{
					"name": "Popup animation",
					"info": "Selection of the popup animation"
				},
				"arr_data_style":{
					"name": "Style",
					"info": "Style of the color picker"
				},
				"bool_data_showFavMenu": {
					"name": "Favourites menu",
					"info": "Show/Hide color favourites menu"
				},
				"bool_data_usePopup":{
					"name": "Colorpicker in popup",
					"info": "Activate/deactivate to use Colorpicker in Popup"
				},
				"bool_data_updateOnMove":{
					"name": "Update on move",
					"info": "Activate/deactivate sending of values continiously on move"
				},
				"bool_data_customBorder":{
					"name": "Custom border radius",
					"info": "Custom border radius for each corner"
				},
				"bool_data_customAnimation":{
					"name": "Custom popup animation",
					"info": "Enable/disable custom popup animation"
				},
				"bool_data_invertAnimation":{
					"name": "Invert popup OFF animation",
					"info": "Enable/disable invert popup animation"
				}
			},
			"TRANSLATOR":{
				"NO_FAVOURITES": "No favourite colors found."
			}
		},
		"Html":{
			"NAME": "Html",
			"DES": "A component, that can display HTML texts.",
			"INPUTS":{
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device (if needed)"
				},
				"data_reading":{
					"name": "Reading name",
					"info": "Name of the Fhem Device Reading (if needed)"
				},
				"data_rawHtml":{
					"name": "Raw HTML",
					"info": "Define HTML text directly"
				}
			},
			"TRANSLATOR":{
				"NO_LABEL": "No HTML text found. Please edit your settings."
			}
		},
		"IFrame":{
			"NAME": "I Frame",
			"DES": "A frame, to implement other web interfaces.",
			"INPUTS":{
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device (if needed)"
				},
				"data_reading":{
					"name": "Reading name",
					"info": "Name of the Fhem Device Reading (if needed)"
				},
				"data_url":{
					"name": "Url",
					"info": "External URL (otherwise IFrame tries to find the URL in the reading)"
				},
				"bool_data_showBorder":{
					"name": "Show border",
					"info": "Show/hide IFrame border"
				}
			},
			"TRANSLATOR":{
				"NO_URL": "No URL found."
			}
		},
		"Input":{
			"NAME": "Input",
			"DES": "An input field, that can send values to Fhem.",
			"INPUTS":{
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device (if needed)"
				},
				"data_setReading":{
					"name": "Set Reading",
					"info": "Name of the set command (if needed)"
				},
				"data_borderRadius":{
					"name": "Border radius",
					"info": "Border radius of the input field"
				},
				"data_borderRadiusTopLeft":{
					"name": "Border radius top left",
					"info": "Border radius of the box top left"
				},
				"data_borderRadiusTopRight":{
					"name": "Border radius top right",
					"info": "Border radius of the input field top right"
				},
				"data_borderRadiusBottomLeft":{
					"name": "Border radius bottom left",
					"info": "Border radius of the input field bottom left"
				},
				"data_borderRadiusBottomRight":{
					"name": "Border radius bottom right",
					"info": "Border radius of the input field bottom right"
				},
				"bool_data_customBorder":{
					"name": "Custom border radius",
					"info": "Custom border radius for each corner"
				},
				"bool_data_showShadow":{
					"name": "Show shadow",
					"info": "Show/hide box shadow"
				},
				"bool_data_showFavorites":{
					"name": "Show last commands",
					"info": "Show/hide last send commands and save them"
				},
				"icon_sendIcon":{
					"name": "Send icon",
					"info": "Icon for the send button"
				},
				"style_backgroundColor":{
					"name": "Background color",
					"info": "Background color of the input field"
				},
				"style_textColor":{
					"name": "Text color",
					"info": "Text color of the input field"
				},
				"style_iconColor":{
					"name": "Icon color",
					"info": "Icon color of the buttons"
				},
				"style_borderColor":{
					"name": "Border color",
					"info": "Border color of the input"
				},
				"style_buttonColor":{
					"name": "Button background color",
					"info": "Background color of the buttons"
				}
			},
			"TRANSLATOR":{
				"NO_FAVOURITES": "No command favourites found."
			}
		},
		"Icon":{
			"NAME": "Icon",
			"DES": "An icon, that can respond to different values in FHEM.",
			"INPUTS":{
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device (if needed)"
				},
				"data_reading":{
					"name": "Reading name",
					"info": "Name of the Fhem Device Reading (if needed)"
				},
				"data_indicatorReading":{
					"name": "Indicator Reading Name",
					"info": "Name of the Fhem indicator Reading (if needed)"
				},
				"data_getOn":{
					"name": "Get on",
					"info": "State of the reading in ON state"
				},
				"data_getOff":{
					"name": "Get off",
					"info": "State of the reading in OFF state"
				},
				"data_min":{
					"name": "Min value",
					"info": "Minimal value (if needed for min color)"
				},
				"data_max":{
					"name": "Max value",
					"info": "Maximal value (if needed for max color)"
				},
				"arr_data_indicatorPosition":{
					"name": "Indicator position",
					"info": "Position of the indicator"
				},
				"icon_iconOn":{
					"name": "Icon on",
					"info": "Desired Icon for ON state"
				},
				"icon_iconOff":{
					"name": "Icon off",
					"info": "Desired Icon for OFF state"
				},
				"style_iconColorOn":{
					"name": "Icon color on",
					"info": "Icon color for ON state"
				},
				"style_iconColorOff":{
					"name": "Icon color off",
					"info": "Icon color for OFF state"
				},
				"style_indicatorColor":{
					"name": "Indicator color",
					"info": "Text color of the indicator"
				},
				"style_indicatorBackgroundColor":{
					"name": "Indicator background color",
					"info": "Background color of the indicator"
				},
				"style_minColor":{
					"name": "Min color",
					"info": "color for < min value"
				},
				"style_maxColor":{
					"name": "Max color",
					"info": "Color for > max value"
				},
				"bool_data_showIndicator":{
					"name": "Show/hide indicator",
					"info": "Show/hide indicator for seperate reading"
				},
				"bool_data_advancedOptions": {
					"name": "Advanced settings",
					"info": "Additional options for the Icon component"
				},
				"bool_data_blinkIcon": {
					"name": "Binking icon",
					"info": "Activate/deactivate blinking icon options"
				},
				"bool_data_blinkIndicator": {
					"name": "Blinking Indicator",
					"info": "Activate/deactivate if indicator should blink as well"
				},
				"bool_data_rotateIcon": {
					"name": "Icon rotation",
					"info": "Activate/deactivate icon rotation"
				},
				"data_showIndicatorOnNot": {
					"name": "Indikator on differing value",
					"info": "Only show indicator on differing reading value"
				},
				"data_blinkOnGreater": {
					"name": "Blinking Icon (greater then)",
					"info": "Blinking Icon, when indicator reading greater then:"
				},
				"data_blinkOnLower": {
					"name": "Blinking Icon (smaller then)",
					"info": "Blinking Icon, when indicator reading smaller then:"
				},
				"data_blinkTime": {
					"name": "Icon blinking time",
					"info": "Time in seconds for the blink animation"
				},
				"data_rotateOn": {
					"name": "Icon rotation on value",
					"info": "Icon rotation on reading value:"
				},
				"data_rotateDeg": {
					"name": "Icon rotation (deg)",
					"info": "Degree of Icon rotation"
				}
			}
		},
		"Image":{
			"NAME": "Image",
			"DES": "An image, that can display FHEM reading URL´s, external URL´s or images from the device.",
			"INPUTS":{
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device (if needed)"
				},
				"data_reading":{
					"name": "Reading name",
					"info": "Name of the Fhem Device Reading (if needed)"
				},
				"data_url":{
					"name": "Url",
					"info": "External URL (otherwise it tries to find the URL in the reading)"
				},
				"data_imageUrl":{
					"name": "Device Image",
					"info": "After saving the component, selection of local image is possible (leave blank on creation)"
				},
				"data_updateInterval":{
					"name": "Update interval",
					"info": "Image update interval in seconds (in combination with no cache)"
				},
				"arr_data_defaultImage":{
					"name": "Defauult image",
					"info": "Default image that should be used, if no URL is present"
				},
				"bool_data_cache":{
					"name": "Cache",
					"info": "Enable/Disable to cache images"
				},
				"bool_data_defaultImage":{
					"name": "Use default image",
					"info": "Enabe/disable to use default image"
				},
				"bool_data_useLocalImage":{
					"name": "Use image from device",
					"info": "Enabe/disable to load local image from device"
				}
			},
			"TRANSLATOR":{
				"NO_URL": "No URL found."
			}
		},
		"Label":{
			"NAME": "Label",
			"DES": "A label, that can display FHEM values or own text.",
			"INPUTS":{
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device (if needed)"
				},
				"data_reading":{
					"name": "Reading name",
					"info": "Name of the Fhem Device Reading (if needed)"
				},
				"data_label":{
					"name": "Label",
					"info": "Label to display (if needed)"
				},
				"data_items":{
					"name": "Items",
					"info": "Manual list of selectable items (comma seperated)"
				},
				"data_alias":{
					"name": "Alias",
					"info": "List of alias values (comma seperated)"
				},
				"data_labelExtension":{
					"name": "Label extension",
					"info": "Ending of the value label (Exp. %)"
				},
				"data_size":{
					"name": "Size",
					"info": "Size of the label"
				},
				"data_min":{
					"name": "Min value",
					"info": "Minimal value (if needed for min color)"
				},
				"data_max":{
					"name": "Max value",
					"info": "Maximal value (if needed for max color)"
				},
				"arr_data_textAlign":{
					"name": "Text align",
					"info": "Alignment of the label text"
				},
				"arr_data_textStyle":{
					"name": "Text-Style",
					"info": "Text-Style of the label"
				},
				"bool_data_useAlias":{
					"name": "Use alias",
					"info": "Activate/deactivate alias list for readings"
				},
				"style_color":{
					"name": "Color",
					"info": "Color of the label"
				},
				"style_minColor":{
					"name": "Min color",
					"info": "color for < min value"
				},
				"style_maxColor":{
					"name": "Max color",
					"info": "Color for > max value"
				}
			},
			"TRANSLATOR":{
				"NO_LABEL": "No label found."
			}
		},
		"Line":{
			"NAME": "Line",
			"DES": "A line, that can be used to structure rooms.",
			"INPUTS":{
				"arr_data_orientation":{
					"name": "Orientation",
					"info": "Orientation of the line"
				},
				"data_height":{
					"name": "Width/Height",
					"info": "Width/Height  of the line"
				},
				"data_rotation":{
					"name": "Rotation",
					"info": "Degrees of line rotation"
				},
				"data_curve_percentage":{
					"name": "Curve",
					"info": "Percentage of the Curve"
				},
				"arr_data_style":{
					"name": "Style",
					"info": "Style of the line"
				},
				"style_color":{
					"name": "Color",
					"info": "Color of the line"
				}
			}
		},
		"MediaList":{
			"NAME": "Media List",
			"DES": "A list from the FHEM MediaList module.",
			"INPUTS":{
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device"
				},
				"data_reading":{
					"name": "Reading name",
					"info": "Name of the Fhem Device Reading"
				},
				"data_setReading":{
					"name": "Set Reading",
					"info": "Name of the set command (if needed)"
				},
				"data_playerDevice":{
					"name": "Device Name of the player",
					"info": "Name of the player decvice to play sibgle tracks"
				},
				"arr_data_setList":{
					"name": "Playlist command",
					"info": "Name of the playlist command, that should be sended"
				},
				"arr_data_player":{
					"name": "Player type",
					"info": "Player type, to define the Track-Index"
				}
			},
			"DICTIONARY":{
				"TOTAL_DURATION": "Total play duration:"
			}
		},
		"Pinpad":{
			"NAME": "Pinpad",
			"DES": "A pinpad, to switch alarm states.",
			"INPUTS":{
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device"
				},
				"data_reading":{
					"name": "Reading name",
					"info": "Name of the Fhem Device Reading (if needed)"
				},
				"data_setReading":{
					"name": "Set Reading",
					"info": "Name of the set command (if needed)"
				},
				"data_pin":{
					"name": "Pin",
					"info": "Name of the reading, that contains the pin"
				},
				"data_getOn":{
					"name": "Get on",
					"info": "State of the reading in ON state"
				},
				"data_getOff":{
					"name": "Get off",
					"info": "State of the reading in OFF state"
				},
				"data_setOn":{
					"name": "Set on",
					"info": "ON value that should be sended"
				},
				"data_setOff":{
					"name": "Set off",
					"info": "OFF value that should be sended"
				},
				"data_labelOnText":{
					"name": "Label on text",
					"info": "Alarm text in ON state"
				},
				"data_labelOffText":{
					"name": "Label off text",
					"info": "Alarm text in OFF state"
				},
				"data_tries":{
					"name": "Tries",
					"info": "Available pin tries, before the pinpad gets locked"
				},
				"arr_data_style":{
					"name": "Style",
					"info": "Style of the pinpad"
				}
			},
			"TRANSLATOR":{
				"NO_PIN_READING": "No reading for pin found."
			}
		},
		"Picker":{
			"NAME": "Picker",
			"DES": "A picker, that can be filled with other components.",
			"INPUTS":{
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device (if needed)"
				},
				"data_reading":{
					"name": "Reading name",
					"info": "Name of the Fhem Device Reading (if needed)"
				},
				"data_getOn":{
					"name": "Get on",
					"info": "State of the reading in ON state"
				},
				"data_getOff":{
					"name": "Get off",
					"info": "State of the reading in OFF state"
				},
				"data_headline":{
					"name": "Headline",
					"info": "Headline of the picker"
				},
				"data_cancelText":{
					"name": "Close text",
					"info": "Label of the close button"
				},
				"data_height":{
					"name": "Picker Height",
					"info": "Height of the picker in %"
				},
				"arr_data_animationStyle":{
					"name": "Picker animation",
					"info": "Selection of the picker animation"
				},
				"arr_data_style":{
					"name": "Style",
					"info": "Style of the picker"
				},
				"bool_data_openOnReading":{
					"name": "Open on reading",
					"info": "Enable/disable to open picker on reading"
				},
				"icon_iconOn":{
					"name": "Icon on",
					"info": "Desired Icon for ON state"
				},
				"icon_iconOff":{
					"name": "Icon off",
					"info": "Desired Icon for OFF state"
				},
				"style_iconColorOn":{
					"name": "Icon color on",
					"info": "Icon color for ON state"
				},
				"style_iconColorOff":{
					"name": "Icon color off",
					"info": "Icon color for OFF state"
				},
				"style_backgroundColorOn":{
					"name": "Background color on",
					"info": "Background color for ON state"
				},
				"style_backgroundColorOff":{
					"name": "Background color off",
					"info": "Background color for OFF state"
				}
			}
		},
		"Popup":{
			"NAME": "Popup",
			"DES": "A popup, that can be filled with other components.",
			"INPUTS":{
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device (if needed)"
				},
				"data_reading":{
					"name": "Reading name",
					"info": "Name of the Fhem Device Reading (if needed)"
				},
				"data_getOn":{
					"name": "Get on",
					"info": "State of the reading in ON state"
				},
				"data_getOff":{
					"name": "Get off",
					"info": "State of the reading in OFF state"
				},
				"data_headline":{
					"name": "Headline",
					"info": "Headline of the popup"
				},
				"data_width":{
					"name": "Popup Width",
					"info": "Width of the popup in %"
				},
				"data_height":{
					"name": "Popup Height",
					"info": "Height of the popup in %"
				},
				"arr_data_animationStyle":{
					"name": "Popup animation",
					"info": "Selection of the popup animation"
				},
				"arr_data_style":{
					"name": "Style",
					"info": "Style of the popup"
				},
				"bool_data_openOnReading":{
					"name": "Open on reading",
					"info": "Enable/disable to open popup on reading"
				},
				"bool_data_customAnimation":{
					"name": "Custom popup Aaimation",
					"info": "Enable/disable custom popup animation"
				},
				"bool_data_invertAnimation":{
					"name": "Invert popup OFF animation",
					"info": "Enable/disable invert popup animation"
				},
				"icon_iconOn":{
					"name": "Icon on",
					"info": "Desired Icon for ON state"
				},
				"icon_iconOff":{
					"name": "Icon off",
					"info": "Desired Icon for OFF state"
				},
				"style_iconColorOn":{
					"name": "Icon color on",
					"info": "Icon color for ON state"
				},
				"style_iconColorOff":{
					"name": "Icon color off",
					"info": "Icon color for OFF state"
				},
				"style_backgroundColorOn":{
					"name": "Background color on",
					"info": "Background color for ON state"
				},
				"style_backgroundColorOff":{
					"name": "Background color off",
					"info": "Background color for OFF state"
				}
			}
		},
		"Select":{
			"NAME": "Select",
			"DES": "A selection menu, that can hold FHEM or manual lists.",
			"INPUTS":{
				"data_fixed_var_variable":{
					"name": "Variable name",
					"info": "Name of the variable, that should be changed"
				},
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device"
				},
				"data_reading":{
					"name": "Reading name",
					"info": "Name of the Fhem Device Reading"
				},
				"data_setReading":{
					"name": "Set Reading",
					"info": "Name of the set command (if needed)"
				},
				"data_currentState":{
					"name": "Current state",
					"info": "Reading for the current state"
				},
				"data_seperator":{
					"name": "Seperator",
					"info": "List seperator of the reading"
				},
				"data_items":{
					"name": "Items",
					"info": "Manual list of selectable items"
				},
				"data_alias":{
					"name": "Alias",
					"info": "List of alias values"
				},
				"data_placehoder":{
					"name": "Placeholder",
					"info": "Placeholder. if no current value is available"
				},
				"data_borderRadius":{
					"name": "Border radius",
					"info": "Border radius of the select-box"
				},
				"data_borderRadiusTopLeft":{
					"name": "Border radius top left",
					"info": "Border radius of the select-box top left"
				},
				"data_borderRadiusTopRight":{
					"name": "Border radius top right",
					"info": "Border radius of the select-box top right"
				},
				"data_borderRadiusBottomLeft":{
					"name": "Border radius bottom left",
					"info": "Border radius of the select-box bottom left"
				},
				"data_borderRadiusBottomRight":{
					"name": "Border radius bottom right",
					"info": "Border radius of the select-box bottom right"
				},
				"bool_data_customBorder":{
					"name": "Custom border radius",
					"info": "Custom border radius for each corner"
				},
				"bool_data_useForVariables":{
					"name": "Use variables",
					"info": "Change variables instead of fhem values"
				},
				"style_borderColor":{
					"name": "Border color",
					"info": "Border color of the select-box"
				}

			},
			"TRANSLATOR":{
				"NO_ITEMS": "No items found",
				"ADD": "Add:",
				"NO_VARIABLE": "No variable was found or the selected variable is not static. Please edit your component settings."
			}
		},
		"Slider":{
			"NAME": "Slider",
			"DES": "A linear slider, that can change numeric and time values.",
			"INPUTS":{
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device"
				},
				"data_reading":{
					"name": "Reading name",
					"info": "Name of the Fhem Device Reading"
				},
				"data_setReading":{
					"name": "Set Reading",
					"info": "Name of the set command (if needed)"
				},
				"data_threshold":{
					"name": "Threshold",
					"info": "Event reduction. Only send every n command to FHEM (in combination with updateOnMove)"
				},
				"data_labelExtension":{
					"name": "Label extension",
					"info": "Ending of the value label (Exp. %)"
				},
				"data_ticks":{
					"name": "Ticks",
					"info": "Amount of ticks on the slider"
				},
				"data_min":{
					"name": "Min value",
					"info": "Min. value of the slider"
				},
				"data_max":{
					"name": "Max value",
					"info": "Max. value of the slider"
				},
				"arr_data_style":{
					"name": "Style",
					"info": "Style of the slider"
				},
				"arr_data_orientation":{
					"name": "Orientation",
					"info": "Orientation of the slider"
				},
				"data_sliderHeight":{
					"name": "Slider height/width",
					"info": "Slider height/width based on the orientation"
				},
				"data_thumbWidth":{
					"name": "Thumb width",
					"info": "Width of the slider thumb"
				},
				"data_thumbHeight":{
					"name": "Thumb height",
					"info": "height of the slider thumb"
				},
				"data_steps":{
					"name": "Steps",
					"info": "Steps for the slider to move and set values"
				},
				"bool_data_showPin":{
					"name": "Show pin",
					"info": "Show/hide value pin on move"
				},
				"bool_data_showValueInThumb":{
					"name": "Show value in thumb",
					"info": "Show/hide to display current value in thumb"
				},
				"bool_data_updateOnMove":{
					"name": "Update on move",
					"info": "Activate/deactivate sending of values continiously on move"
				},
				"style_backgroundColor":{
					"name": "Background color",
					"info": "Background color of the slider"
				},
				"style_thumbColor":{
					"name": "Thumb color",
					"info": "Background color of the slider thumb"
				},
				"style_fillColor":{
					"name": "Fill color",
					"info": "Fill color of the slider"
				},
				"style_tickColor":{
					"name": "Tick color",
					"info": "Color of the ticks"
				},
				"style_iconColor":{
					"name": "Icon color",
					"info": "Color of the slider icon"
				},
				"style_thumbValueColor":{
					"name": "Thumb value color",
					"info": "Color of the value in thumb"
				},
				"icon_sliderIcon":{
					"name": "Slider icon",
					"info": "Icon in slider (for style in ios-mode)"
				}
			}
		},
		"Sprinkler":{
			"NAME": "Sprinkler",
			"DES": "A sprinkler module, that can trigger irregation cycles.",
			"INPUTS":{
				"data_device": {
					"name": "Device name",
					"info": "List of sprinkler devices"
				},
				"arr_data_settingsStyle":{
					"name": "Settings style",
					"info": "Style of the sprinkler settings"
				},
				"data_weather":{
					"name": "Weather",
					"info": "Weather device for sprinkler"
				},
				"data_smartSprinkler":{
					"name": "Smart sprinkler",
					"info": "Smart sprinkler device for sprinkler"
				}
			},
			"TRANSLATOR":{
				"RUN_INTERVAL": {
					"TITLE": "Run interval",
					"INFO": "Run all cycles after another for:",
					"SELECT_MANUAL": "Select manual runtime:"
				},
				"RUNTIMES":{
					"TITLE": "Sprinkler settings",
					"INTERVAL":{
						"TITLE": "Watering cycle ",
						"START_TIME": "Start time:",
						"RUNTIME": "Runtime: ",
						"TOTAL_RUNTIME": "Total runtime:",
						"WEEKDAYS": "Weekdays:",
						"SUMMARY": "Summary: ",
						"CYCLE": "Watering cycle:",
						"CURRENT": "Current runtime: ",
						"NEXT": "Next runtime: ",
						"NOT_TODAY": "disabled for today."
					},
					"INTERVAL_2":{
						"DISABLE": "Disable interval 2",
						"ENABLE": "Enable interval 2"
					},
					"EDIT": {
						"INTERVAL_1": "Edit interval 1",
						"INTERVAL_2": "Edit interval 2"
					},
					"DEACTIVATED": "deactivated",
					"CAN_NOT_START":{
						"TITLE": "Start not possible",
						"INFO": "A manual program is running right now."
					}
				},
				"COLORS":{
					"TITLE": "Color settings"
				},
				"SMART_SPRINKLER":{
					"TITLE": "Smart sprinkler",
					"INFO": "Smart sprinkler uses weather data to control the sprinkler runtimes automatically.",
					"CONFIG":{
						"ENABLE":{
							"TITLE": "Smart sprinkler",
							"INFO": "Activate/deactivate smart sprinkler"
						},
						"RAIN":{
							"TITLE": "Rain",
							"INFO": "Disable watering for precipitation above "
						},
						"RAIN_VALUE":{
							"TITLE": "Thresholded rain",
							"INFO": "Amount of rain, where watering should be disabled."
						},
						"WIND":{
							"TITLE": "Wind",
							"INFO": "Disable watering for wind speed above "
						},
						"WIND_VALUE":{
							"TITLE": "Thresholded wind speed",
							"INFO": "Wind speed, where watering should be disabled."
						},
						"MAX_TEMP":{
							"TITLE": "Threshold Max temperature",
							"INFO": "Watering will be longer for temperatures above: "
						},
						"MAX_TEMP_VALUE":{
							"TITLE": "Extend watering by:",
							"INFO": "Extend watering by the given value."
						},
						"MIN_TEMP":{
							"TITLE": "Threshold Min temperature",
							"INFO": "Watering will be shortened for temperatures below: "
						},
						"MIN_TEMP_VALUE":{
							"TITLE": "Shorten watering by:",
							"INFO": "Shorten watering by the given value."
						},
						"MAIL":{
							"TITLE": "Winter warning",
							"INFO": "Send e-mail notification for temperatures below: "
						},
						"MAIL_VALUE":{
							"TITLE": "Send e-mail to:"
						},
						"WINTER":{
							"TITLE": "Winter mode",
							"INFO": "The winter mode disables all sprinkler runtimes. If this setting is enabled, no configurations can be made.",
							"BUTTONS":{
								"TITLE": "Winter mode",
								"INFO": "Enable/disable winter mode"
							}
						},
						"WEATHER": "Weather"
					}
				},
				"WEATHER":{
					"FORECAST": "Current weather forecast",
					"MAX_TEMP_TODAY": "Max temperature today: ",
					"MIN_TEMP_TODAY": "Min temperature today: ",
					"WIND_TODAY": "Wind speed today: ",
					"WIND_TODAY_OFF": "The watering for today is disabled, due to high wind speeds.",
					"RAIN_TODAY": "Precipitation today: ",
					"RAIN_TODAY_OFF": "The watering for today is disabled, due to high precipitation.",
					"TOO_RAINY": "too rainy.",
					"TOO_WINDY": "too windy.",
					"STANDARD_RUNTIME": "All watering cycles keep unchanged.",
					"ADJUSTED_RUNTIME": "All watering cycles are adjusted, based on the weather forecast."
				},
				"WINTER_MODE":{
					"STATES":{
						"ACTIVE":{
							"TITLE": "Winter mode is active",
							"INFO": "The watering is disabled.",
							"CAN_NOT_START":{
								"INFO": "Single cycles can not be started"
							}
						},
						"NOT_SET": {
							"TITLE": "Winter mode not possible",
							"INFO": "A manual program is still running. Please terminate it first."
						}
					}
				},
				"MAIL":{
					"WRONG_FORMAT":{
						"TITLE": "The given e-mail address is in a wrong format.",
						"INFO": "Please insert a valid e-mail address."
					},
					"CHANGE": "Change e-mail address"
				},
				"NAME":{
					"CHANGE": "Change name"
				},
				"WRONG_SORTING":{
					"TITLE": "Error in interval order",
					"INFO": "The start of interval 2 must be behind interval 1."
				},
				"COLLIDE":{
					"TITLE": "Time collision",
					"INFO": "Should this time be setted?",
					"OPTIMAL":{
						"INTERVAL_1": "Interval 1 should start at: ",
						"INTERVAL_2": "Interval 2 should start at: "
					},
					"BUTTONS":{
						"CONFIRM": "Set time"
					},
					"COLLIDE_PERCENTAGE": {
						"TITLE": "Times could collide",
						"INFO": "Should this value be setted?",
						"OPTIMAL": "The best possible value is: "
					}
				}
			}
		},
		"Swiper":{
			"NAME": "Swiper",
			"DES": "A swipable container, that can have different pages and can hold components.",
			"INPUTS":{
				"data_headline": {
					"name": "Headline",
					"info": "Header label"
				},
				"data_pages": {
					"name": "Pages",
					"info": "Amount of pages for the Swiper"
				},
				"data_borderRadius":{
					"name": "Border radius",
					"info": "Border Radius of the Swiper"
				},
				"data_customHeaders":{
					"name": "Custom header labels",
					"info": "Comma seperated list of custom header labels"
				},
				"bool_data_showBorder":{
					"name": "Show border",
					"info": "Show/hide swiper border"
				},
				"bool_data_showPager":{
					"name": "Show pager",
					"info": "Show/hide swiper page indicator"
				},
				"bool_data_customHeaders":{
					"name": "Custom headers",
					"info": "Activate/deactivate custom headers"
				},
				"arr_data_orientation":{
					"name": "Orientation",
					"info": "Orientation of the swiper"
				},
				"arr_data_style":{
					"name": "Style",
					"info": "Style of the swiper"
				},
				"style_headerColor":{
					"name": "Header color",
					"info": "Header background color"
				},
				"style_backgroundColor":{
					"name": "Background color",
					"info": "Content background color"
				},
				"style_pagerOffColor":{
					"name": "Pager Off color",
					"info": "Off color of the pager"
				},
				"style_pagerOnColor":{
					"name": "Pager On color",
					"info": "On color of the pager"
				},
				"arr_style_customHeaderBackgrounds":{
					"name": "Custom header backgrounds",
					"info": "Background colors of the custom headers"
				},
				"arr_style_customHeaderColors":{
					"name": "Custom header colors",
					"info": "Colors of the custom headers"
				}
			}
		},
		"Switch":{
			"NAME": "Switch",
			"DES": "A simple switch to toggle 2 different states in FHEM.",
			"INPUTS":{
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device"
				},
				"data_reading":{
					"name": "Reading name",
					"info": "Name of the Fhem Device Reading"
				},
				"data_setReading":{
					"name": "Set Reading",
					"info": "Name of the set command (if needed)"
				},
				"data_getOn":{
					"name": "Get on",
					"info": "State of the reading in ON state"
				},
				"data_getOff":{
					"name": "Get off",
					"info": "State of the reading in OFF state"
				},
				"data_setOn":{
					"name": "Set on",
					"info": "ON value that should be sended"
				},
				"data_setOff":{
					"name": "Set off",
					"info": "OFF value that should be sended"
				},
				"data_label":{
					"name": "Label",
					"info": "Label to display in the switch (default: Fhem device name)"
				},
				"data_subLabel":{
					"name": "Sub label",
					"info": "Display of sub label"
				},
				"bool_data_showBorder":{
					"name": "Show border",
					"info": "Show/hide switch border"
				},
				"bool_data_customLabels":{
					"name": "Custom labels",
					"info": "Enable/disable user defined labels"
				},
				"arr_data_buttonStyle":{
					"name": "Switch style",
					"info": "Style of the switch"
				},
				"style_borderColor":{
					"name": "Border color",
					"info": "Border color of the switch, for seperation"
				},
				"style_colorOn":{
					"name": "Color on",
					"info": "Background color of the switch in ON state"
				},
				"style_colorOff":{
					"name": "Color off",
					"info": "Background color of the switch in OFF state"
				},
				"style_thumbColorOn":{
					"name": "Thumb color on",
					"info": "Color of the thumb in ON state"
				},
				"style_thumbColorOff":{
					"name": "Thumb color off",
					"info": "Color of the thumb in OFF state"
				}
			}
		},
		"Table":{
			"NAME": "Table",
			"DES": "A table, that displays readings from FHEM.",
			"INPUTS": {
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device"
				}
			},
			"TRANSLATOR":{
				"CONFIG":{
					"TABLE":{
						"TITLE": "Config table",
						"INFO": "Configure the table header"
					},
					"READINGS": {
						"TITLE": "Select readings",
						"INFO": "select readings, that should be displayed in the table"
					}
				}
			}
		},
		"Tabs":{
			"NAME": "Tabs",
			"DES": "A tabs container, that can be filled with other components",
			"INPUTS":{
				"data_pages": {
					"name": "Pages",
					"info": "Amount of pages of the tabs component"
				},
				"data_borderRadius":{
					"name": "Border radius",
					"info": "Border radius of the tabs"
				},
				"data_borderRadiusTopLeft":{
					"name": "Border radius top left",
					"info": "Border radius of the tabs top left"
				},
				"data_borderRadiusTopRight":{
					"name": "Border radius top right",
					"info": "Border radius of the tabs top right"
				},
				"data_borderRadiusBottomLeft":{
					"name": "Border radius bottom left",
					"info": "Border radius of the tabs bottom left"
				},
				"data_borderRadiusBottomRight":{
					"name": "Border radius bottom right",
					"info": "Border radius of the tabs bottom right"
				},
				"bool_data_customBorder":{
					"name": "Custom border radius",
					"info": "Custom border radius for each corner"
				},
				"bool_data_customIconColors":{
					"name": "Cusom icon ON color",
					"info": "Custom colors of the icons in ON state"
				},
				"arr_data_style":{
					"name": "Style",
					"info": "Style of the tabs"
				},
				"arr_data_tabPosition":{
					"name": "Tabs position",
					"info": "Position of the tab selection"
				},
				"arr_icon_icons":{
					"name": "Icons",
					"info": "A list of icons (for every tab)"
				},
				"arr_style_iconColors":{
					"name": "Icon colors",
					"info": "A list of icon colors"
				},
				"arr_style_iconOnColors":{
					"name": "Icon-ON-colors",
					"info": "List of icon colors in ON state"
				},
				"arr_style_backGroundColors":{
					"name": "Background colors",
					"info": "A list of background colors (for every tab)"
				}
			}
		},
		"Thermostat":{
			"NAME": "Thermostat",
			"DES": "A thermostat, that can display and animate temperature values.",
			"INPUTS":{
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device"
				},
				"data_reading":{
					"name": "Reading name",
					"info": "Name of the Fhem Device Reading (exp. desired-temp)"
				},
				"data_setReading":{
					"name": "Set Reading",
					"info": "Name of the set command (if needed, exp. desired-temp)"
				},
				"data_displayReading": {
					"name": "Display reading",
					"info": "Reading value that should be displayed (bsp. measured-temp)"
				},
				"data_min":{
					"name": "Min value",
					"info": "Min. value of the thermostat"
				},
				"data_max":{
					"name": "Max value",
					"info": "Max. value of the thermostat"
				},
				"data_steps":{
					"name": "Steps",
					"info": "Steps for the thermostat to move and set values"
				},
				"data_threshold":{
					"name": "Threshold",
					"info": "Event reduction. Only send every n command to FHEM (in combination with updateOnMove)"
				},
				"arr_data_style":{
					"name": "Style",
					"info": "Style of the thermostat"
				},
				"data_labelExtension":{
					"name": "Label extension",
					"info": "Ending of the value label (Exp. %)"
				},
				"bool_data_updateOnMove":{
					"name": "Update on move",
					"info": "Activate/deactivate sending of values continiously on move"
				},
				"bool_data_enableAnimation":{
					"name": "Thermostat animation",
					"info": "Enable/disable thermostat animation"
				},
				"style_gradientColor1":{
					"name": "Gradient color 1",
					"info": "Color of ther 1. gradient step"
				},
				"style_gradientColor2":{
					"name": "Gradient color 2",
					"info": "Color of ther 2. gradient step"
				},
				"style_gradientColor3":{
					"name": "Gradient color 3",
					"info": "Color of ther 3. gradient step"
				},
				"style_gradientColor4":{
					"name": "Gradient color 4",
					"info": "Color of ther 4. gradient step"
				},
				"style_backgroundColorOne":{
					"name": "Background color",
					"info": "Background color of the round slider"
				},
				"style_tickColor":{
					"name": "Tick color",
					"info": "Tick color of the round slider"
				},
				"style_thumbColor":{
					"name": "Thumb color",
					"info": "Thumb color of the round slider"
				},
				"style_heatingColor": {
					"name": "Heating color",
					"info": "Color during the heating process"
				},
				"style_coolingColor": {
					"name": "Cooling color",
					"info": "Color during the cooling process"
				}
			}
		},
		"Time Picker":{
			"NAME": "Time Picker",
			"DES": "A menu, for time selection.",
			"INPUTS":{
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device"
				},
				"data_reading":{
					"name": "Reading name",
					"info": "Name of the Fhem Device Reading"
				},
				"data_setReading":{
					"name": "Set Reading",
					"info": "Name of the set command (if needed)"
				},
				"data_label":{
					"name": "Label",
					"info": "Label to display in the timepicker (default: Fhem device name)"
				},
				"data_confirmBtn":{
					"name": "Confirm Button",
					"info": "Label for the confirm button"
				},
				"data_cancelBtn":{
					"name": "Cancel Button",
					"info": "Label for the cancel button"
				},
				"data_maxHours":{
					"name": "Max hours",
					"info": "Maximal hours for the timepicker"
				},
				"data_maxMinutes":{
					"name": "Max minutes",
					"info": "Maximal minutes for the timepicker"
				},
				"arr_data_format":{
					"name": "Format",
					"info": "Format of the timepicker"
				},
				"bool_data_showBorder":{
					"name": "Show border",
					"info": "Show/hide switch border"
				}
			}
		},
		"Weather":{
			"NAME": "Weather",
			"DES": "A component, to display the weather forecast from FHEM modules.",
			"INPUTS":{
				"data_device": {
					"name": "Device name",
					"info": "Name of the Fhem device"
				},
				"arr_data_fhemModule":{
					"name": "Fhem module",
					"info": "Name of the fhem weather module"
				},
				"arr_data_style":{
					"name": "Style",
					"info": "Style of the chart"
				},
				"bool_data_showCurrentDayDetails":{
					"name": "Show day values",
					"info": "Show/hide day values"
				},
				"bool_data_showDayBorder":{
					"name": "Seperate days",
					"info": "Activate/deactivate day seperation by horizontal lines"
				},
				"style_dayBorderColor":{
					"name": "Day seperator color",
					"info": "Color of the day seperator lines"
				}
			}
		}
	},
	"GENERAL":{
		"BUTTONS":{
			"CANCEL": "Cancel",
			"CONFIRM": "Confirm",
			"BACK": "Back",
			"NEXT": "Next",
			"SAVE": "Save",
			"CLOSE": "Close",
			"OKAY": "Okay",
			"SHOW": "Show"
		},
		"DICTIONARY":{
			"ROOM": "Room",
			"ROOMS": "Rooms",
			"COMPONENT": "Component",
			"COMPONENTS": "Components", 
			"ADDED": "added",
			"NO_ROOMS_ADDED_TITLE": "No rooms added:",
			"NO_ROOMS_ADDED_INFO": "All rooms are already included in FhemNative.",
			"NO_ROOMS_ADDED_INFO_NOT_FOUND": "No room from Fhem could be generated.",
			"NO_COMPONENTS_ADDED_TITLE": "No components added:",
			"NO_COMPONENTS_ADDED_INFO": "No components for FhemNative found.",
			"NO_COMPONENTS_ADDED_REASON_TITLE": "Not added components:",
			"NO_COMPONENTS_ADDED_REASONS":{
				"ROOM_NAME": "Room name",
				"NO_ROOM": "No defined room for the device",
				"NO_COMPONENT": "No component in definition",
				"ALREADY_DEFINED": "Component is already defined"
			},
			"SETTINGS_SAVED_TITLE": "Settings saved:",
			"SETTINGS_SAVED_INFO": "Settings saved under: ",
			"SETTINGS_SAVED_MOBILE_TITLE": "Copy settings:",
			"SETTINGS_SAVED_MOBILE_INFO": "Please save the listed settings as: 'FhemNative_settings.json'. FhemNative is not storing data locally on devices for protection reasons.",
			"NO_CHANGELOG_PRESENT": "No changelog available.",
			"WEEKDAYS":{
				"MONDAY": "Monday",
				"TUESDAY": "Tuesday",
				"WEDNESDAY": "Wednesday",
				"THURSDAY": "Thursday",
				"FRIDAY": "Friday",
				"SATURDAY": "Saturday",
				"SUNDAY": "Sunday",
				"DAILY": "Daily"
			},
			"AS": "as",
			"AND": "and",
			"TO": "to",
			"YES": "Yes",
			"NO": "No"
		},
		"SETTINGS":{
			"TITLE": "Settings",
			"FHEM": {
				"TITLE": "FHEM Settings",
				"WEBSOCKET":{
					"TITLE": "Websocket Settings",
					"INFO": "Configure the websocket connection."
				},
				"EXPORT":{
					"TITLE": "Export Settings",
					"INFO": "Export of room-, component- and FHEM settings.",
					"MESSAGES":{
						"DIRECTORY": "Directory doesn´t exist.",
						"SHARE": {
							"TITLE": "FhemNative Settings",
							"INFO": "Export of FhemNative Settings"
						}
					}
				},
				"IMPORT":{
					"TITLE": "Import Settings",
					"INFO": "Import of room-, component- and FHEM settings.",
					"MESSAGES":{
						"SUCCESS": {
							"TITLE": "Import was successful.",
							"INFO": "FhemNative settings were imported successfully."
						},
						"ERROR":{
							"TITLE": "An error occured",
							"INFO": "FhemNative settings were not imported."
						}
					}
				},
				"SHARED_CONFIG":{
					"TITLE": "Shared FhemNative Config in FHEM Reading",
					"INFO": "Dhare FhemNative configuration in FHEM Reading",
					"BUTTON": "Configure",
					"PICKER": {
						"HEADER": "Shared Configuration",
						"MESSAGE": "NOTE: Please Backup you existing configuration before using this option. FhemNative will propably overwrite your existing configuration.",
						"SWITCH":{
							"TITLE": "Share config",
							"INFO": "Activate/deactivate shared configuration"
						},
						"PASSIVE": {
							"TITLE": "Passive-Mode",
							"INFO": "This device is NOT allowd to change the shared config, when Passive-Mode is activated"
						},
						"DEVICE":{
							"TITLE": "FHEM Device",
							"INFO": "FHEM Device for Config"
						},
						"READING":{
							"TITLE": "FHEM Device Reading",
							"INFO": "FHEM Device Reading, that should contain the configuration"
						},
						"BUTTON": "Test Configuration",
						"TRANSFER": {
							"TITLE": "Transfer Config",
							"INFO": "Send Config to FHEM Device Reading.",
							"BUTTON": "Transfer",
							"WARNING": {
								"HEADER": "Attention! Please Backup before proceeding!",
								"MESSAGE": "A Transfer is only needed for initial config sharing or when the config-sharing reading is exchanged. Are you sure you want to overwrite the reading? All Devices will use the current configuration of THIS device."
							}
						}
					},
					"WARNING": {
						"HEADER": "Passive-Mode is active",
						"INFO": "The shared FhemNative configuration is in 'Passive-Mode'. Changes on this device are not possible."
					}
				},
				"AUTO_ROOMS":{
					"TITLE": "Auto generate rooms",
					"INFO": "Automatically generate rooms from FHEM.",
					"BUTTON": "Generate rooms"
				},
				"AUTO_DEVICES":{
					"TITLE": "Auto generate devices",
					"INFO": "Automatically generate devices from FHEM to dedicated rooms.",
					"BUTTON": "Generate devices"
				},
				"ALWAYS_ON":{
					"TITLE": "Keep connection",
					"INFO": "Keep FHEM connection always on, even in background"
				},
				"VARIABLES":{
					"TITLE": "FhemNative variables",
					"INFO": "Show/hide FhemNative variables"
				},
				"DYNAMIC_COMPONENT_LOADER":{
					"TITLE": "Dynamic component loader",
					"INFO": "Activate/deactivate to define components based on Fhem userAttr."
				}
			},
			"APP":{
				"TITLE": "App Settings",
				"THEME":{
					"TITLE": "App Theme",
					"INFO": "Change App theme.",
					"OPTIONS":{
						"DARK": "Dark",
						"DARK_ALTERNATIVE": "Dark alternative",
						"BRIGHT": "Bright",
						"CUSTOM": "Custom"
					}
				},
				"LANGUAGE":{
					"TITLE": "Language",
					"INFO": "Change App language.",
					"OPTIONS":{
						"EN": "English",
						"DE": "German"
					}
				},
				"EDITING":{
					"TITLE": "Menu/Room Editing",
					"INFO": "Enable/disable Menu and Room editing."
				},
				"STATUS_BAR": {
					"TITLE": "Status bar",
					"INFO": "Show/hide status bar"
				},
				"UNDO_REDO":{
					"TITLE": "Undo/Redo",
					"INFO": "Add Undo/Redo functionality while editing."
				},
				"TOAST":{
					"TITLE": "Toast Messages",
					"INFO": "Enable/disable toast messages."
				},
				"TASKS":{
					"TITLE": "Tasks",
					"INFO": "Enable/disable Task Service."
				},
				"VERSION_CHECK":{
					"TITLE": "Check updates",
					"INFO": "Enable/disable to check for App updates."
				},
				"LOG":{
					"TITLE": "Write Log-File",
					"INFO": "Activate/deactivate logging.",
					"EXPORT":{
						"TITLE": "Log-File export",
						"INFO": "Export of the Log file"
					}
				}
			},
			"COMPONENTS":{
				"TITLE": "Component Settings",
				"GRID":{
					"TITLE": "Grid Snapping",
					"INFO": "Enable/disable to arrange components based on grid."
				},
				"GRID_SIZE":{
					"TITLE": "Grid Size",
					"INFO": "Size of the grid to arrange components."
				},
				"DEVICE_INFO": {
					"TITLE": "Device size",
					"INFO": "Info about your device size in pixel:"
				},
				"VIBRATION":{
					"ENABLE": {
						"TITLE": "Haptic feedback",
						"INFO": "Enable/disable haptic feedback"
					},
					"DURATION":{
						"TITLE": "Haptic feedback duration",
						"INFO": "Duration of haptic feedback in seconds"
					}
				},
				"SOUND":{
					"ENABLE": {
						"TITLE": "Acoustic feedback",
						"INFO": "Enable/disable acoustic feedback"
					},
					"PATH":{
						"TITLE": "Acoustic feedback selection",
						"INFO": "Select the acoustic feedback sound"
					}
				}
			},
			"CHANGELOG":{
				"TITLE": "Changelog",
				"LOG":{
					"TITLE": "Recent changes in FhemNative",
					"INFO": "Changelogs of FhemNative updates.",
					"BUTTON": "Show"
				},
				"PICKER":{
					"TITLE": "Current Changelog"
				},
				"SELECTOR":{
					"TITLE": "Select version",
					"INFO": "See the changes from other App versions"
				}
			},
			"SUPPORT":{
				"TITLE": "Support",
				"BUTTON": "Support",
				"HELP":{
					"TITLE": "Help others/Report bugs/Feature requests",
					"INFO": "Help in the FhemNative community. Reporte your known bugs and place requests in the FHEM forum."
				}
			},
			"INFO": {
				"WEBSITE": "Website",
				"PRIVACY": "Privacy"
			},
			"ADVANCED":{
				"TITLE": "Advanced options",
				"INFO": "Show the advanced options of FhemNative.",
				"WINDOW":{
					"TITLE": "Window Settings",
					"SELECT_DEVICE":{
						"TITLE": "Select device",
						"INFO": "Select target device. FhemNative will change the window size to the target device."
					},
					"ENABLE":{
						"TITLE": "Custom window size on start of FhemNative",
						"INFO": "Activate/deactivate to set the adjusted window size on start of FhemNative"
					},
					"CUSTOM":{
						"TITLE": "Custom window size",
						"INFO": "Enable/disable to use custom window size",
						"SUB_INFO": "Please endure, that you pass the viewport size of the device instad of the pixels.",
						"WIDTH": "Viewport width:",
						"HEIGHT": "Viewport height:",
						"BUTTON": "Set window size",
						"ERROR":{
							"TITLE": "An error occured.",
							"INFO": "Width and height must be greater then 200px."
						}
					}
				}
			},
			"REQUESTS": {
				"DENY": {
					"HEADER": "Permission rejected",
					"INFO": "To use this feature, you have to enable it in the app settings."
				}
			}
		},
		"TASKS":{
			"TITLE": "Tasks",
			"CREATE_TASK": {
				"TITLE": "Create Task",
				"INFO": "Create a task for FhemNative in background",
				"NAME": {
					"TITLE": "Task name",
					"INFO": "Name of the task"
				},
				"DES": {
					"TITLE": "Task description",
					"INFO": "Description of the task (for own clarity)"
				}
			},
			"EDIT_TASK": {
				"TITLE": "Edit task"
			},
			"CONFIG_TASK": {
				"TITLE": "Configure task"
			},
			"CHANGE_TASK": {
				"MISSING":{
					"TITLE": "Missing values",
					"INFO": "There are missing Input values in the definition. Please ensure, that all fields are filled."
				}
			},
			"REMOVE_TASK":{
				"TITLE": "Remove task",
				"INFO": "Are you sure about removing this task?"
			},
			"ADD_OUTPUT":{
				"TITLE": "Add Output",
				"INFO": "Add Output Parameter"
			},
			"ADD_ELSE":{
				"TITLE": "Add Else Block",
				"INFO": "Add Else Condition"
			},
			"REMOVE_ELSE":{
				"TITLE": "Remove Else Block",
				"INFO": "Remove Else Condition"
			}
		},
		"VARIABLES":{
			"TITLE": "FhemNative variables",
			"CREATE_VARIABLE": {
				"TITLE": "Create variable",
				"INFO": "Create a variable for FhemNative. The variable creates a syntax, that is useable in components",
				"NAME": {
					"TITLE": "Variable name",
					"INFO": "Name of the variable"
				},
				"DES": {
					"TITLE": "Variable description",
					"INFO": "Description of the variable (for own clarity)"
				},
				"TYPE":{
					"TITLE": "Variable type",
					"INFO": "Type of the variable (static/dynamic)"
				},
				"PREVIEW":{
					"TITLE": "Variable preview",
					"INFO": "This syntax can be used, to access the value in the variable:"
				}
			},
			"EDIT_VARIABLE": {
				"TITLE": "Edit variable"
			},
			"CONFIG_VARIABLE": {
				"TITLE": "Configure variable",
				"PREVIEW": "Value preview:",
				"SELECT_INPUT":{
					"TITLE": "Input options",
					"INFO": "Selection of input options"
				},
				"SELECT_UPDATER":{
					"TITLE": "Update option",
					"INFO": "Selection of update options"
				},
				"SELECT_REGEX":{
					"TITLE": "Regex option",
					"INFO": "Selection of regex options"
				}
			},
			"REMOVE_VARIABLE":{
				"TITLE": "Remove variable",
				"INFO": "Are you sure about removing this variable?"
			}
		},
		"RESET":{
			"TITLE": "Factory reset",
			"REVERT":{
				"TITLE": "Back to factory settings",
				"INFO": "Reset all FhemNative settings to factory defaults.",
				"BUTTON": "Reset",
				"SURE": "Are you sure, you want to reset FhemNative to factory defaults?"
			},
			"DONE":{
				"TITLE": "Settings resetted",
				"INFO": "All settings were resetted to factory defaults."
			}
		},
		"CREATE_ROOM":{
			"TITLE": "Create room:",
			"ROOM_NAME": "Room name",
			"ROOM_ICON": "Room icon:",
			"ROOM_COLOR": "Raum color (Icon/Name):",
			"NO_ROOM_NAME": {
				"TITLE": "No room name",
				"INFO": "Please give the room a name."
			},
			"ROOM_CREATED": "Room created.",
			"USE_AS_GROUP":{
				"TITLE": "Use room as Menu",
				"INFO": "Activate/deactivate to use room as menu structure"
			},
			"GROUP_TO":{
				"TITLE": "Group room to menu structure",
				"INFO": "Activate/deactivate to group room to menu structure",
				"TITLE_SELECT": "Group to which menu structure:"
			}
		},
		"CHANGE_ROOM":{
			"TITLE": "Edit room:"
		},
		"COMPONENT":{
			"GENERAL":{
				"CONFIG": "Configure component: ",
				"SELECT": "Select a component:"
			},
			"CREATE":{
				"SELECT": "Select a component to create:"
			},
			"EDIT":{
				"PREVIEW": {
					"TITLE": "Component preview",
					"INFO": "Show/hide component preview"
				},
				"CONFIG_DATA": "Configure Component Attributes:",
				"CONFIG_ICON": "Configure Component Icons:",
				"CONFIG_STYLE": "Configure Component Style:",
				"CONFIG_TEST": "Test Component Configuration:",
				"NO_COMPONENT": "Please select a component first."
			},
			"CUSTOM_INPUTS":{
				"INFO": "The component has advanced configuration properties.",
				"DES": "Please create the component first and configure the custom properties directly in the component.",
				"PICKER": {
					"HEADER": "Advanced configuration:"
				}
			}
		},
		"EDIT_COMPONENT":{
			"MENU":{
				"HEADERS": {
					"COMPONENT": "Component",
					"SHARE": "Share",
					"ALIGN": "Align",
					"EDIT": "Edit"
				},
				"SETTINGS": "Settings",
				"PIN": "Pin",
				"UNPIN": "Unpin",
				"COPY": "Copy",
				"GROUP": "Group",
				"UNGROUP": "Ungroup",
				"SELECT": "Select",
				"UNSELECT": "Deselect",
				"SELECT_ALL": "Select all",
				"DESELECT_ALL": "Deselect all",
				"PASTE": "Paste",
				"DELETE": "Delete",
				"DETAILS": "Details",
				"EXPORT": {
					"BUTTON": "Export",
					"AS_FILE": "File-Export",
					"AS_QR": "QR-Export"
				},
				"IMPORT": {
					"BUTTON": "Import",
					"AS_FILE": "File-Import",
					"AS_QR": "QR-Import"
				},
				"ALIGN": {
					"BUTTON": "Layers",
					"FOREGROUND": "Foreground",
					"BACKGROUND": "Background"
				},
				"ARRANGE": {
					"BUTTON": "Arrange",
					"LEFT": "Left",
					"RIGHT": "Right",
					"TOP": "Top",
					"BOTTOM": "Bottom"
				},
				"DEF_DETAILS":{
					"SHORT": {
						"TITLE": "Short definition",
						"INFO": "Short definition in comparison to default values."
					},
					"LONG": {
						"TITLE": "Full definition",
						"INFO": "Full component definition."
					}
				},
				"SWITCH":{
					"TITLE": "Switch component",
					"INFO": "Quickly change the selected component"
				},
				"EXPORT_COMPONENT":{
					"SUCCESS": {
						"TITLE": "Components exported",
						"INFO": "Components are exported and available under: "
					},
					"ERROR": {
						"TITLE": "Components not exported",
						"INFO": "Components can´t be exported. An error occured."
					}
				},
				"IMPORT_COMPONENT":{
					"SUCCESS": {
						"TITLE": "Components imported",
						"INFO": "Components were successfully imported."
					},
					"ERROR": {
						"TITLE": "Components not imported",
						"INFO": "Components can´t be imported. An error occured."
					}
				}
			}
		},
		"FHEM_MENU":{
			"CONNECTION":{
				"TITLE": "IP settings",
				"PROFILE":{
					"HEADER": "FhemNative profile",
					"TITLE": "Add profile",
					"INFO": "Add connection profile",
					"DELETE":{
						"TITLE": "Delete profile",
						"INFO": "Delete connection profile"
					}
				},
				"IP":{
					"TITLE": "IP address",
					"INFO": "IP address of the Fhem server"
				},
				"PORT":{
					"TITLE": "Port",
					"INFO": "Defined port"
				},
				"TYPE":{
					"TITLE": "Connection type",
					"INFO": "Which connection type should be chosen"
				},
				"SECURE":{
					"TITLE": "Secure connection",
					"INFO": "Enable/disable to establish a secure connection"
				},
				"BASIC_AUTH":{
					"TITLE": "Basic Auth.",
					"INFO": "Activate/deactivate basic authentification",
					"USER":{
						"TITLE": "Username",
						"INFO": "Username for Basic Auth."
					},
					"PASSW":{
						"TITLE": "Password",
						"INFO": "Password for Basic Auth."
					}
				}
			}
		},
		"ERRORS":{
			"GENERAL": {
				"ERROR": "Error",
				"ERROR_OCCOURED": "An error occoured."
			},
			"CONNECTION":{
				"NO_CONNECTION": "No connection to Fhem.",
				"CONNECTION_HELPER": "Please review your IP settings."
			},
			"NOT_FOUND":{
				"DEVICE_NOT_DEFINED": "FHEM device not defined.",
				"DEVICE_NOT_FOUND": "Fhem device not found.",
				"READING_NOT_FOUND": "Device reading not found.",
				"COMPONENT_HELPER": "Please review your component configuration."
			}
		},
		"FHEM":{
			"TITLE": "Fhem",
			"CONNECTED":"Connected to Fhem.",
			"DISCONNECT": "Disconnected from Fhem",
			"ERROR": "Connection error to Fhem.",
			"TIMEOUT": "Connection timeout to Fhem.",
			"RETRY": "Timeout limit reached. retry in 5sek.",
			"FETCHED_ALL_DEVICES": "Fetched all devices.",
			"DEVICE_UPDATE": "Updated values of: "
		},
		"CONFIG":{
			"TITLE": "Config",
			"TRY_SHARED_CONFIG": "Try to load shared config."
		}
	}
}